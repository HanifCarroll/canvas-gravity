{"version":3,"sources":["utils.js","Ball.js","canvas.js"],"names":["canvas","document","querySelector","c","getContext","randomIntFromRange","min","max","Math","floor","random","getRandomColor","letters","split","color","i","round","distance","x1","y1","x2","y2","xDist","yDist","sqrt","pow","Ball","x","y","dx","dy","radius","gravity","friction","beginPath","arc","PI","fillStyle","fill","closePath","height","width","addGravity","draw","innerWidth","innerHeight","balls","gravitySlider","getElementById","frictionSlider","ballSlider","init","valueAsNumber","push","animate","requestAnimationFrame","clearRect","forEach","ball","update","addEventListener"],"mappings":"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","file":"canvas.3e0e8508.map","sourceRoot":"../src","sourcesContent":["export const canvas = document.querySelector(\"canvas\");\nexport const c = canvas.getContext(\"2d\");\n\nexport function randomIntFromRange(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function getRandomColor() {\n  const letters = \"0123456789ABCDEF\".split(\"\");\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.round(Math.random() * 15)];\n  }\n  return color;\n}\n\nexport function distance(x1, y1, x2, y2) {\n  const xDist = x2 - x1;\n  const yDist = y2 - y1;\n\n  return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n}\n","import { canvas, c, getRandomColor } from \"./utils\";\n\nexport default class Ball {\n  constructor(x, y, dx, dy, radius, gravity, friction) {\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this.radius = radius;\n    this.gravity = gravity;\n    this.friction = friction;\n    this.color = getRandomColor();\n  }\n\n  draw() {\n    c.beginPath();\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    c.fillStyle = this.color;\n    c.fill();\n    c.closePath();\n  }\n\n  addGravity() {\n    if (this.y + this.radius + this.dy > canvas.height) {\n      this.dy = -this.dy * this.friction;\n    } else {\n      this.dy += this.gravity;\n    }\n\n    if (\n      this.x + this.radius + this.dx > canvas.width ||\n      this.x - this.radius <= 0\n    ) {\n      this.dx = -this.dx * this.friction;\n    }\n\n    this.x += this.dx;\n    this.y += this.dy;\n  }\n\n  update() {\n    this.addGravity();\n    this.draw();\n  }\n}\n","import Ball from \"./Ball\";\nimport { canvas, c, randomIntFromRange } from \"./utils\";\n\ncanvas.width = innerWidth;\ncanvas.height = innerHeight;\n\nconst gravitySlider = document.getElementById(\"gravity\");\nconst frictionSlider = document.getElementById(\"friction\");\nconst ballSlider = document.getElementById(\"balls\");\n\n// Event Listeners\naddEventListener(\"resize\", () => {\n  canvas.width = innerWidth;\n  canvas.height = innerHeight;\n\n  init();\n});\n\naddEventListener(\"click\", () => init());\n\nballSlider.addEventListener(\"input\", () => init());\n\n// Implementation\nlet balls;\n\nfunction init() {\n  balls = [];\n\n  for (let i = 0; i < ballSlider.valueAsNumber; i++) {\n    const radius = randomIntFromRange(5, 50);\n    const x = randomIntFromRange(radius, canvas.width - radius);\n    const y = randomIntFromRange(radius, canvas.height - radius);\n    const dx = randomIntFromRange(-2, 2);\n    const dy = randomIntFromRange(-5, 5);\n    const gravity = gravitySlider.valueAsNumber;\n    const friction = frictionSlider.valueAsNumber;\n\n    balls.push(new Ball(x, y, dx, dy, radius, gravity, friction));\n  }\n}\n\n// Animation Loop\nfunction animate() {\n  requestAnimationFrame(animate);\n  c.clearRect(0, 0, canvas.width, canvas.height);\n\n  // c.fillText(\"HTML CANVAS BOILERPLATE\", mouse.x, mouse.y);\n  balls.forEach(ball => {\n    ball.update();\n  });\n}\n\ninit();\nanimate();\n"]}