{"version":3,"sources":["utils.js","canvas.js"],"names":["randomIntFromRange","min","max","Math","floor","random","randomColor","colors","length","distance","x1","y1","x2","y2","xDist","yDist","sqrt","pow","module","exports","canvas","document","querySelector","c","getContext","width","innerWidth","height","innerHeight","gravity","friction","addEventListener","init","Ball","x","y","dx","dy","radius","color","beginPath","arc","PI","fillStyle","fill","closePath","addGravity","draw","balls","i","push","animate","requestAnimationFrame","clearRect","forEach","object","update"],"mappings":"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","file":"canvas.00467ef7.map","sourceRoot":"../src","sourcesContent":["function randomIntFromRange(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction randomColor(colors) {\n  return colors[Math.floor(Math.random() * colors.length)];\n}\n\nfunction distance(x1, y1, x2, y2) {\n  const xDist = x2 - x1;\n  const yDist = y2 - y1;\n\n  return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n}\n\nmodule.exports = { randomIntFromRange, randomColor, distance };\n","import { randomColor, randomIntFromRange } from \"./utils\";\n\nconst canvas = document.querySelector(\"canvas\");\nconst c = canvas.getContext(\"2d\");\n\ncanvas.width = innerWidth;\ncanvas.height = innerHeight;\n\nconst colors = [\"#2185C5\", \"#7ECEFD\", \"#FFF6E5\", \"#FF7F66\"];\n\nlet gravity = 2;\nconst friction = 0.95;\n\n// Event Listeners\naddEventListener(\"resize\", () => {\n  canvas.width = innerWidth;\n  canvas.height = innerHeight;\n\n  init();\n});\n\naddEventListener(\"click\", () => init());\n\n// Objects\nclass Ball {\n  constructor(x, y, dx, dy, radius) {\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this.radius = radius;\n    this.color = randomColor(colors);\n  }\n\n  draw() {\n    c.beginPath();\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    c.fillStyle = this.color;\n    c.fill();\n    c.closePath();\n  }\n\n  addGravity() {\n    if (this.y + this.radius + this.dy > canvas.height) {\n      this.dy = -this.dy * friction;\n    } else {\n      this.dy += gravity;\n    }\n\n    if (\n      this.x + this.radius + this.dx > canvas.width ||\n      this.x - this.radius <= 0\n    ) {\n      this.dx = -this.dx * friction;\n    }\n\n    this.x += this.dx;\n    this.y += this.dy;\n  }\n\n  update() {\n    this.addGravity();\n    this.draw();\n  }\n}\n\n// Implementation\nlet balls;\n\nfunction init() {\n  balls = [];\n\n  for (let i = 0; i < 30; i++) {\n    const radius = randomIntFromRange(5, 50);\n    const x = randomIntFromRange(radius, canvas.width - radius);\n    const y = randomIntFromRange(radius, canvas.height - radius);\n    const dx = randomIntFromRange(-2, 2);\n    const dy = randomIntFromRange(-5, 5);\n\n    balls.push(new Ball(x, y, dx, dy, radius));\n  }\n}\n\n// Animation Loop\nfunction animate() {\n  requestAnimationFrame(animate);\n  c.clearRect(0, 0, canvas.width, canvas.height);\n\n  // c.fillText(\"HTML CANVAS BOILERPLATE\", mouse.x, mouse.y);\n  balls.forEach(object => {\n    object.update();\n  });\n}\n\ninit();\nanimate();\n"]}